---
import "../../styles/global.css";

// Component imports
import BaseLayout from "../../layouts/BaseLayout.astro";
import TextBlock from "../../components/TextBlock.astro";
import PageTitle from "../../components/PageTitle.astro";
import ImageBlock from "../../components/ImageBlock.astro";
import ScrollingItem from "../../components/ScrollingItem.astro";
// import GridContainer from "../../components/GridContainer.astro";
import GridContainer from "../../components/GridContainer.astro";
import Tags from "../../components/Tags.astro";

// Page variables
const pageTitle = "Grant Staublin | Work | Trellis Documentation";
const mainClass = "width--large work-test";

// Image imports
import mainImage from "../../images/work/trellis-tokens/variables.png";
import TypeMigration from "../../images/work/trellis-tokens/TypeMigration.astro";
import tokenLayers from "../../images/work/trellis-tokens/token-architecture-layers-2.jpg";

import tokenStudio from "../../images/work/trellis-tokens/token-studio.png";

import auditTracking from "../../images/work/trellis-tokens/audit-tracking.jpg";
import namingWorksheet from "../../images/work/trellis-tokens/naming-worksheet.jpg";
import voteLayer from "../../images/work/trellis-tokens/voting-on-layer1.jpg";
import tokenOutput from "../../images/work/trellis-tokens/output.png";

// import tokenLearning from "../../images/work/trellis-tokens/token-architecture_learning.jpg";
import tokenTaxonomy from "../../images/work/trellis-tokens/token-taxonomy-iterate.png";
import playgroundClassic from "../../images/work/trellis-tokens/playground_classic.jpg";
import playgroundDark from "../../images/work/trellis-tokens/playground_dark.jpg";
import playgroundSimple from "../../images/work/trellis-tokens/playground_simple.jpg";
import playgroundTechnical from "../../images/work/trellis-tokens/playground_technical.jpg";

// Content imports
import * as introMD from "./content/trellis-tokens/trellis-tokens-intro.md";
const introContent = await introMD.compiledContent();

import * as typeMD from "./content/trellis-tokens/trellis-tokens-type.md";
const typeContent = await typeMD.compiledContent();

import * as auditsMD from "./content/trellis-tokens/trellis-tokens-audits.md";
const auditsContent = await auditsMD.compiledContent();

import * as learningMD from "./content/trellis-tokens/trellis-tokens-learning.md";
const learningContent = await learningMD.compiledContent();

import * as stepsMD from "./content/trellis-tokens/trellis-tokens-steps.md";
const stepsContent = await stepsMD.compiledContent();

import * as stepsOneMD from "./content/trellis-tokens/trellis-tokens-steps-one.md";
const stepsOneContent = await stepsOneMD.compiledContent();

import * as stepsTwoMD from "./content/trellis-tokens/trellis-tokens-steps-two.md";
const stepsTwoContent = await stepsTwoMD.compiledContent();

import * as roadShowMD from "./content/trellis-tokens/trellis-tokens-roadshow.md";
const roadShowContent = await roadShowMD.compiledContent();

import * as stepsThreeMD from "./content/trellis-tokens/trellis-tokens-steps-three.md";
const stepsThreeContent = await stepsThreeMD.compiledContent();

import * as stepsFourMD from "./content/trellis-tokens/trellis-tokens-steps-four.md";
const stepsFourContent = await stepsFourMD.compiledContent();

import * as playgroundMD from "./content/trellis-tokens/trellis-tokens-playground.md";
const playgroundContent = await playgroundMD.compiledContent();

import * as techMD from "./content/trellis-tokens/trellis-tokens-tech.md";
const techContent = await techMD.compiledContent();

import * as reviseMD from "./content/trellis-tokens/trellis-tokens-revise.md";
const reviseContent = await reviseMD.compiledContent();
---

{/* ================================== */}
{/* HTML                               */}
{/* ================================== */}
<BaseLayout pageTitle={pageTitle} mainClass={mainClass} noFollow>
  <div class="portfolioPage__container">
    <div class="width--large">
      <PageTitle
        alignment="center"
        title="Trellis Design Tokens"
        subTitle="Creating a new design token system that supports the HubSpot's classic visual language (Canvas) and prepares the product for its emerging future visual language (Trellis)"
      >
        <Tags
          tags={[
            "design system",
            "design tokens",
            "theming",
            "product strategy",
            "front-end development",
          ]}
        />
      </PageTitle>

      {/* Main Section =================================  */}
      <ImageBlock
        imageSrc={mainImage}
        cssClass="imageBlock__container--test"
        caption="These 2025 Figma variables showcase how the design token system I began building in mid-2023 has evolved."
      />
    </div>

    {/* Intro Section =================================  */}
    <TextBlock title={introMD.frontmatter.title}>
      <div>
        {(<Fragment set:html={introContent} />)}
      </div>
    </TextBlock>

    {/* Type Migration Section =================================  */}
    <div class="width--small align-center">
      <TypeMigration />
    </div>

    <TextBlock title={typeMD.frontmatter.title}>
      <div>
        {(<Fragment set:html={typeContent} />)}
      </div>
    </TextBlock>

    {/* Audits Section ===================  */}
    <section class="width--large">
      <ScrollingItem>
        <Fragment slot="content">
          <TextBlock title={auditsMD.frontmatter.title}>
            <section>
              {(<Fragment set:html={auditsContent} />)}
            </section>
          </TextBlock>
        </Fragment>
        <Fragment slot="media">
          <ImageBlock imageSrc={auditTracking} />
        </Fragment>
      </ScrollingItem>
    </section>

    {/* Learning Section ===================  */}
    <ImageBlock
      imageSrc={tokenLayers}
      cssClass="width--large"
      caption="To prevent from subjecting the team to a weekly Ted Talk, I tried to make the weekly Jams interactive, giving team members a voice in the decisions being made, whether it was the name of token layers, or overall taxonomy approaches."
    />

    <TextBlock title={learningMD.frontmatter.title}>
      <div>
        {(<Fragment set:html={learningContent} />)}
      </div>
    </TextBlock>

    {/* The Steps ===================  */}
    <section class="width--large">
      <ScrollingItem>
        <Fragment slot="content">
          <TextBlock
            title={stepsOneMD.frontmatter.title}
            cssClass="locking-scroll"
          >
            <div>
              {(<Fragment set:html={stepsOneContent} />)}
            </div>
          </TextBlock>
        </Fragment>
        <Fragment slot="media"><ImageBlock imageSrc={tokenTaxonomy} /></Fragment
        >
      </ScrollingItem>

      <ScrollingItem>
        <Fragment slot="content">
          <TextBlock
            title={stepsTwoMD.frontmatter.title}
            cssClass="locking-scroll"
          >
            <div>
              {(<Fragment set:html={stepsTwoContent} />)}
            </div>
          </TextBlock>
        </Fragment>
        <Fragment slot="media"><ImageBlock imageSrc={voteLayer} /></Fragment>
      </ScrollingItem>

      <ScrollingItem>
        <Fragment slot="content">
          <TextBlock
            title={stepsThreeMD.frontmatter.title}
            cssClass="locking-scroll"
          >
            <div>
              {(<Fragment set:html={stepsThreeContent} />)}
            </div>
          </TextBlock>
        </Fragment>
        <Fragment slot="media">
          <ImageBlock imageSrc={namingWorksheet} />
        </Fragment>
      </ScrollingItem>

      <ScrollingItem>
        <Fragment slot="content">
          <TextBlock
            title={stepsFourMD.frontmatter.title}
            cssClass="locking-scroll"
          >
            <div>
              {(<Fragment set:html={stepsFourContent} />)}
            </div>
          </TextBlock>
        </Fragment>
        <Fragment slot="media">
          <ImageBlock imageSrc={tokenOutput} />
        </Fragment>
      </ScrollingItem>
    </section>

    {/* Roadshow ===================  */}
    <TextBlock title={roadShowMD.frontmatter.title}>
      <div>
        {(<Fragment set:html={roadShowContent} />)}
      </div>
    </TextBlock>

    <!-- <section class="width--full">
      <GridContainer>
        <ImageBlock imageSrc={playgroundClassic} />
        <ImageBlock imageSrc={playgroundDark} />
        <ImageBlock imageSrc={playgroundSimple} />
        <ImageBlock imageSrc={playgroundTechnical} />
      </GridContainer>
    </section>
    <TextBlock title={playgroundMD.frontmatter.title}>
      <div>
        {(<Fragment set:html={playgroundContent} />)}
      </div>
    </TextBlock> -->

    <section class="width--large">
      <ScrollingItem>
        <Fragment slot="content">
          <TextBlock
            title={playgroundMD.frontmatter.title}
            cssClass="locking-scroll"
          >
            <div>
              {(<Fragment set:html={playgroundContent} />)}
            </div>
          </TextBlock>
        </Fragment>
        <Fragment slot="media">
          <ImageBlock imageSrc={playgroundClassic} />
          <ImageBlock imageSrc={playgroundDark} />
          <ImageBlock imageSrc={playgroundSimple} />
          <ImageBlock imageSrc={playgroundTechnical} />
        </Fragment>
      </ScrollingItem>
    </section>

    {/* Tech Choices Section =================================  */}

    <!-- <TextBlock title={techMD.frontmatter.title}>
      <div>
        {(<Fragment set:html={techContent} />)}
      </div>
    </TextBlock>
    <ImageBlock imageSrc={tokenStudio} cssClass="width--medium" /> -->

    {/* Break Section =================================  */}
    <TextBlock title={reviseMD.frontmatter.title}>
      <div>
        {(<Fragment set:html={reviseContent} />)}
      </div>
    </TextBlock>
  </div>
  <!-- portfolioPage -->
</BaseLayout>

{/* ================================== */}
{/* Style                              */}
{/* ================================== */}
<style>
  .scrolling__layout {
    position: relative;
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: 40px;
    border: 1px solid blue;
    background-color: red;
  }

  .scrolling__layout + .scrolling__layout {
    margin-top: 32px;
    border: 4px solid red;
  }

  .scrolling__layout--reverse {
    position: relative;
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 40px;
    /* border: 1px solid red; */
  }

  [class^="tester-"] + [class^="tester-"] {
    margin-top: 64px;
    border: 2px solid green;
  }

  .align-center {
    text-align: center;
  }

  .scrolling__media-container {
    * + * {
      margin-block-start: 40px;
    }
  }

  .portfolioPage__container {
    /* border: 8px solid yellow; */
  }
</style>
