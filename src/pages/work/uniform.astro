---
import "../../styles/global.css";
import Work from "../../layouts/Work.astro";

// =================================
// Page Variables
const pageTitle = "Grant Staublin | Work | Uniform";
const mainClass = "width--large";

// =================================
// Image imports
import uniCSS2 from "../../images/work/uniform/uniCSS2.png";
import uniformHP2 from "../../images/work/uniform/uniform2.png";
import uniAvatar from "../../images/work/uniform/avatar2.png";
import uniBlog from "../../images/work/uniform/blog2.png";
import uniDeprecate from "../../images/work/uniform/deprecate2.png";
import uniTypography from "../../images/work/uniform/typography2.png";
import uniVariables from "../../images/work/uniform/variables2.png";

// =================================
// Image imports
import uniformBlog from "../../images/work/uniform/uniformBlog.mov";
import uniTheming from "../../images/work/uniform/theming.mov";

// =================================
// Content Imports
import * as sportsMD from "./content/globe-newspaper/sports.md";
const sportsContent = await sportsMD.compiledContent();

// =================================
// Component imports
import TextBlock from "../../components/TextBlock.astro";
import PageTitle from "../../components/PageTitle.astro";
import ImageBlock from "../../components/ImageBlock.astro";
import GridContainer from "../../components/GridContainer.astro";
import Stage from "../../components/Stage.astro";
---

{/* ================================== */}
{/* HTML                               */}
{/* ================================== */}
<Work pageTitle={pageTitle} noFollow>
  <div class="portfolioPage__container">
    <PageTitle
      title="Uniform Design system"
      subTitle="xxxxxx"
      alignment="center"
    />

    {/* Main Section =================================  */}

    <div class="width--large">
      <Stage imageSrc={uniCSS2} topper />
    </div>

    {/* Intro Section =================================  */}
    <!-- <TextBlock title={introMD.frontmatter.title}>
      <div>
        {(<Fragment set:html={introContent} />)}
      </div>
    </TextBlock> -->

    <div class="width--large">
      <!-- <Stage imageSrc={uniformBlog} topper /> -->
      <Stage>
        <Fragment slot="custom-image">
          <video id="vid" muted playsInline transition:persist>
            <source src={uniformBlog} type="video/mp4" />
          </video>
        </Fragment>
      </Stage>
    </div>

    {/* Site Section =================================  */}
    <div class="width--full">
      <GridContainer gridGap="gap200" caption="Grid Container caption">
        <Stage imageSrc={uniVariables} />
        <Stage imageSrc={uniTypography} />
        <Stage imageSrc={uniAvatar} />
        <Stage imageSrc={uniBlog} />
        <!-- <Stage imageSrc={uniDeprecate} /> -->
      </GridContainer>
    </div>

    {/* Theming =================================  */}
    <div class="width--large">
      <!-- <Stage imageSrc={uniformBlog} topper /> -->
      <Stage>
        <Fragment slot="custom-image">
          <video id="vid2" muted playsInline transition:persist>
            <source src={uniTheming} type="video/mp4" />
          </video>
        </Fragment>
      </Stage>
    </div>

    {/* Uniform site Section =================================  */}
    <div class="width--large">
      <Stage imageSrc={uniformHP2} topper />
    </div>

    {/* xxxxx =================================  */}
  </div>
  <!-- portfolioPage -->
</Work>

{/* ================================== */}
{/* Style                              */}
{/* ================================== */}
<style>
  .align-center {
    text-align: center;
  }

  .mag__group {
    > * + * {
      margin-block-start: 40px;
    }
  }

  video {
    max-width: 100%;
  }
</style>

{/* ================================== */}
{/* JS                              */}
{/* ================================== */}
<script>
  let observer = new IntersectionObserver((entries, observer) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        vid.play();
      }
    });
  });

  let observer2 = new IntersectionObserver((entries, observer) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        vid2.play();
      }
    });
  });

  observer.observe(vid);
  observer2.observe(vid2);
</script>
