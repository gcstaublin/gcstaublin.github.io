---
import "../styles/global.css";

const { gridLayout = "two-up", collapseGap } = Astro.props;
---

{/* ================================== */}
{/* HTML Structure                     */}
{/* ================================== */}
<div
  class={`grid__container grid__container--${gridLayout} ${collapseGap ? "grid--collapse" : "xx"}`}
>
  <slot />
</div>

{/* ================================== */}
{/* Style                              */}
{/* ================================== */}
<style>
  :root {
    --grid-container-gap: 40px;
  }
  .grid__container {
    --gap: var(--grid-container-gap);

    display: grid;
    gap: var(--gap);
  }

  .grid--collapse {
    gap: 0;
  }

  .grid__container--one-up {
    grid-template-columns: 1fr;
  }

  .grid__container--two-up {
    grid-template-columns: 1fr 1fr;
    @media (max-width: 700px) {
      grid-template-columns: 1fr;
    }
  }

  .grid__container--three-up {
    grid-template-columns: 1fr 1fr 1fr;
    @media (max-width: 700px) {
      grid-template-columns: 1fr;
    }
  }

  .grid__container--three-up-fit {
    --min-width: 455px;

    /* background-color: red; */
    /* grid-template-columns: repeat(3, 1fr) */
    /* grid-template-columns: repeat(auto-fit, 300px); */
    /* grid-template-columns: repeat(auto-fit, minmax(var(--min-width), 1fr)); */
    grid-template-columns: repeat(
      auto-fit,
      minmax(min(var(--min-width), 100%), 1fr)
    );
    /* grid-template-columns: repeat(
      auto-fill,
      minmax(min(var(--min-width), 100%), 1fr)
    ); */
  }

  .grid__container--three-up-fill {
    --grid-col-min-width: 255px;

    background-color: blue;

    grid-template-columns: repeat(
      auto-fill,
      minmax(min(var(--grid-col-min-width), 100%), 1fr)
    );
  }
</style>
